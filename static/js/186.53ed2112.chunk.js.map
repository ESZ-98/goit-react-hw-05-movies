{"version":3,"file":"static/js/186.53ed2112.chunk.js","mappings":"kOAoCA,UA/BgB,WACd,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAEMC,GAAcC,EAAAA,EAAAA,cAAW,iBAAC,8GAEPC,EAAAA,EAAAA,GAAiBC,EAAAA,EAAAA,YAAqBR,IAF/B,OAEtBS,EAFsB,OAG5BL,EAAWK,EAAOC,KAAKC,SAHK,gDAK5BC,QAAQC,IAAR,MAL4B,yDAO7B,CAACb,IAIJ,OAFAc,EAAAA,EAAAA,YAAU,kBAAMT,CAAN,GAAmB,CAACA,KAG5B,wBACGF,EAAQY,OAAS,EAChBZ,EAAQa,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAASC,EAApB,EAAoBA,GAApB,OACV,2BACE,wBAAKF,KACL,uBAAIC,MAFGC,EADC,KAOZ,sEAIP,C","sources":["components/Reviews/Reviews.jsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { apiMovieLauncher } from '../API/apiMovieLauncher';\nimport apiUtils from '../API/apiUtils';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [revData, setRevData] = useState([]);\n\n  const reviewsData = useCallback(async () => {\n    try {\n      const answer = await apiMovieLauncher(apiUtils.API_REVIEWS(movieId));\n      setRevData(answer.data.results);\n    } catch (err) {\n      console.log(err);\n    }\n  }, [movieId]);\n\n  useEffect(() => reviewsData, [reviewsData]);\n\n  return (\n    <ul>\n      {revData.length > 0 ? (\n        revData.map(({ author, content, id }) => (\n          <li key={id}>\n            <h3>{author}</h3>\n            <p>{content}</p>\n          </li>\n        ))\n      ) : (\n        <p>We don't have any reviews for this movie.</p>\n      )}\n    </ul>\n  );\n};\n\nexport default Reviews;\n"],"names":["movieId","useParams","useState","revData","setRevData","reviewsData","useCallback","apiMovieLauncher","apiUtils","answer","data","results","console","log","useEffect","length","map","author","content","id"],"sourceRoot":""}